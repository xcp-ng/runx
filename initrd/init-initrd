#!/bin/sh

# Useful to enable the possibility to use the pivot_root command.
switch_initramfs()
{
    if [ ! -r /etc/initramfs_moved ]; then
        echo "Moving root from initramfs to tmpfs..."
        DEST=/initramfs
        mkdir -p $DEST
        mount -t tmpfs -o size="100%" tmpfs $DEST

        for directory in /*/ ; do
            directory=${directory%/}
            if [ "$directory" != "$DEST" ]; then
                cp -a $directory $DEST 2>/dev/null
            fi
        done

        touch $DEST/etc/initramfs_moved
        exec switch_root $DEST $0
    fi
}

switch_root()
{
    new_root=$1
    echo "Switching root $1..."

    umount /proc
    umount /sys

    mkdir -p $new_root/run
    mount -t tmpfs tmpfs $new_root/run
    mkdir -p $new_root/run/initramfs

    pivot_root $new_root $new_root/run/initramfs
    exec chroot / /bin/sh
    /bin/sh # Fallback if we can't execute the command.
}

# ==============================================================================

switch_initramfs

mount -t proc proc /proc
mount -t sysfs sysfs /sys
mount -t devtmpfs devtmpfs /dev

touch /etc/fstab

root=`cat /proc/cmdline | grep -o '\broot=[^ ]*' | cut -d = -f 2`
if test -z "$root"
then
    exit 1
fi

if [ "$root" = "9p" ]
then
    mount -t 9p -o msize=131072,trans=xen share_dir /mnt
else
    mount $root /mnt
fi

mkdir /mnt/dev &>/dev/null
mkdir /mnt/sys &>/dev/null
mkdir /mnt/proc &>/dev/null
mount -o bind /dev /mnt/dev
mount -o bind /sys /mnt/sys
mount -o bind /proc /mnt/proc

ip=`cat /proc/cmdline | grep -o '\bip=[^ ]*' | cut -d = -f 2`
gw=`cat /proc/cmdline | grep -o '\bgw=[^ ]*' | cut -d = -f 2`
route=`cat /proc/cmdline | grep -o '\broute=[^ ]*' | cut -d = -f 2`
if test "$ip"
then
    # ipv4
    if [ "$ip" != "${ip#*[0-9].[0-9]}" ]
    then
        ip link set dev eth0 up
        ip addr add "$ip" dev eth0
        if [ "$route" ] && [ "$gw" ]
        then
            route add -net $route gw $gw eth0
        fi
        mkdir -p /mnt/etc
        echo "nameserver 8.8.8.8" > /mnt/etc/resolv.conf
    # ipv6
    elif [ "$ip" != "${ip#*:[0-9a-fA-F]}" ]
    then
        ip link set dev eth0 up
        ip addr add "$ip" dev eth0
        if [ "$route" ] && [ "$gw" ]
        then
            route -A inet6 add $route gw $gw eth0
        fi
        mkdir -p /mnt/etc
        echo "nameserver 2001:4860:4860::8888" > /mnt/etc/resolv.conf
    fi
else
    # Attempt to get an IP configuration via DHCP
    ip link set dev eth0 up
    udhcpc -i eth0 -n -s /bin/configure-network -q >/dev/null
fi

switch_root /mnt `cat /mnt/cmdline`
